plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.liquibase.gradle" version '2.2.1'
    id "org.hibernate.orm" version '6.6.0.Final'
    id "co.uzzu.dotenv.gradle" version "4.0.0"
}

group = 'com.alyamovsky'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springAiVersion', "1.0.0-M1")
    set('springShellVersion', "3.3.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    liquibaseRuntime 'org.liquibase:liquibase-core'
    liquibaseRuntime 'org.postgresql:postgresql'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.3'
    liquibaseRuntime 'info.picocli:picocli:4.7.6'
    liquibaseRuntime 'org.yaml:snakeyaml:2.3'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    implementation 'org.springframework.shell:spring-shell-starter'
    testImplementation 'org.springframework.shell:spring-shell-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
        mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
    }
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    workingDir = project.rootDir
}

bootRun {
    systemProperties = System.properties as Map<String, ?>
    standardInput = System.in
}

liquibase {
    activities {
        main {
            changelogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
            url env.DB_URL.value
            username env.DB_USERNAME.value
            password env.DB_PASSWORD.value
            driver 'org.postgresql.Driver'
        }
    }
}

dependencyLocking {
    lockAllConfigurations()
}